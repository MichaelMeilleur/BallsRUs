@using BallsRUs.Utilities;
@{
    if (ViewBag.Category is not null)
        ViewData["Title"] = ViewBag.Category;
    else if (ViewBag.Search is not null)
        ViewData["Title"] = ViewBag.Search;
    else
        ViewData["Title"] = "Catalogue";

    Dictionary<string, bool> checkedBoxBrandFilter = ViewBag.checkedBoxBrandFilter;
    int minValue = ViewBag.minValue;
    int maxValue = ViewBag.maxValue;
    bool selectAllBrands = ViewBag.SelectAllBrands;
}


<div id="product-index-promotions-carousel-container">
    <div id="product-index-promotions-carousel-controls" class="carousel slide" data-ride="carousel">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img class="d-block w-100" src="~/img/slider1.png" alt="First slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="~/img/slider2.png" alt="Second slide">
            </div>
            <div class="carousel-item">
                <img class="d-block w-100" src="~/img/slider3.png" alt="Third slide">
            </div>
        </div>
        <a class="carousel-control-prev" href="#product-index-promotions-carousel-controls" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#product-index-promotions-carousel-controls" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>
<div class="row mx-0">
    <div id="product-index-filter-container" class="col-11 col-md-3 mb-3 mb-md-0 mx-auto mx-md-0 justify-self-center">
        <form asp-controller="Product" asp-action="Catalog" method="post">
            <div class="row">
                <div class="col-6 col-md-12 justify-content-center">
                    <h4>Trier</h4>
                    <select id="product-index-filter-sort-dropdown" name="sorting">
                        <option id="empty-selected-sort" value="empty">-- Aucun --</option>
                        <option id="lowtohigh-selected-sort" value="@Constants.PRICE_LOW_TO_HIGH">Prix : Croissant</option>
                        <option id="hightolow-selected-sort" value="@Constants.PRICE_HIGH_TO_LOW">Prix : Décroissant</option>
                        <option id="brandalphabetical-selected-sort" value="@Constants.BRAND_ALPHABETICAL">Alphabétique (Marque)</option>
                        <option id="newtoold-selected-sort" value="@Constants.RELEASE_NEW_TO_OLD">Arrivage : Décroissant</option>
                    </select>
                </div>
                <div class="col-6 col-md-12 mt-0 mt-md-4">
                    <h4>Filtrer</h4>
                    <div class="product-index-filter-discounted-checkbox-container">
                        <h5>Produits en rabais</h5>
                        <input id="product-index-filter-discounted-checkbox" name="discounted" type="checkbox" value="true"
                               @if (ViewBag.FilterDiscounted)
                               {
                               @Html.Raw("checked")
                               } /> Produits en rabais
                    </div>
                    <br />
                    <div class="product-index-filter-brands-checkbox-container">
                        <h5>Filtrer par marque</h5>
                        <input id="product-index-filter-brands-checkall-checkbox-container" name="selectAllBrands" type="checkbox" style="font-size:14px"
                               @if (selectAllBrands == true)
                               {
                                @Html.Raw("checked")
                               }> Sélectionner toutes les marques
                        <input type="hidden" name="selectAllBrands" value="false" />
                        <p></p>
                        @for (int i = 0; i < ViewBag.listBrands.Count; i++)
                        {
                            <div class="product-index-filter-brand-Checkbox-click-container">
                                <input class="product-index-filter-brand-Checkbox" style="font-weight:100;" type="checkbox" name="checkedBoxBrandFilter[@ViewBag.listBrands[i]]" value="true"
                                   @if (checkedBoxBrandFilter != null && checkedBoxBrandFilter.ContainsKey(ViewBag.listBrands[i]))
                                   {
                                   @Html.Raw("checked")
                                   }>
                                <label>@ViewBag.listBrands[i]</label>
                            </div>
                        }
                    </div>
                    <div class="product-index-filter-price-slider-container">
                        <h5>Filtrer par prix</h5>
                        <p>
                            <label for="price">Sélection du prix</label>
                            <input type="text" name="rangePrice" id="product-index-filter-price-input" readonly style="border:0" />
                        </p>
                        <div id="product-index-filter-price-slider">
                        </div>
                    </div>

                </div>
                <input id="product-index-filter-apply-button" asp-route-category="@ViewBag.Category" asp-route-search="@ViewBag.Search"
                       asp-route-sorting="@ViewBag.SortingType" asp-route-discounted="@ViewBag.FilterDiscounted" type="submit" value="Appliquer" class="mb-4" />
            </div>
        </form>
    </div>
    <div class="col-12 col-md-9">
        <vc:product-list category="@ViewBag.Category" search="@ViewBag.Search"
                         price-high-to-low="@ViewBag.HighToLow" price-low-to-high="@ViewBag.LowToHigh"
                         brand-alphabetical="@ViewBag.BrandAlphabetical" new-to-old="@ViewBag.NewToOld"
                         discounted="@ViewBag.FilterDiscounted" checked-box-brand-filter-vc="checkedBoxBrandFilter"
                         min-value="@ViewBag.minValue" max-value="@ViewBag.maxValue">
        </vc:product-list>
    </div>
</div>

@section Scripts {
    <script>
        // Redonner la valeur choisi lors de la dernière requête au <select>
        if ("@ViewBag.SortingType" == "@Constants.PRICE_HIGH_TO_LOW") {
            document.getElementById("hightolow-selected-sort").setAttribute('selected', true);
        }
        else {
            document.getElementById("hightolow-selected-sort").removeAttribute('selected');
        }

        if ("@ViewBag.SortingType" == "@Constants.PRICE_LOW_TO_HIGH") {
            document.getElementById("lowtohigh-selected-sort").setAttribute('selected', true);
        }
        else {
            document.getElementById("lowtohigh-selected-sort").removeAttribute('selected');
        }

        if ("@ViewBag.SortingType" == "@Constants.BRAND_ALPHABETICAL") {
            document.getElementById("brandalphabetical-selected-sort").setAttribute('selected', true);
        }
        else {
            document.getElementById("brandalphabetical-selected-sort").removeAttribute('selected');
        }

        if ("@ViewBag.SortingType" == "@Constants.RELEASE_NEW_TO_OLD") {
            document.getElementById("newtoold-selected-sort").setAttribute('selected', true);
        }
        else {
            document.getElementById("newtoold-selected-sort").removeAttribute('selected');
        }
    </script>
    <script>
        var btnAppliquer = document.getElementById("product-index-filter-apply-button");
        var formAction = btnAppliquer.getAttribute("formaction");

        // Gérer l'URL de retour du bouton de filtres dépendament des cases cochées
        document.getElementById("product-index-filter-discounted-checkbox").addEventListener("change", function () {
            if (this.checked) {
                formAction = formAction.replace("discounted=False", "discounted=True");
            } else {
                formAction = formAction.replace("discounted=True", "discounted=False");
            }

            btnAppliquer.setAttribute("formaction", formAction);
        });

        // Gérer l'URL de retour du bouton de filtres dépendament du tri sélectionné
        document.getElementById("product-index-filter-sort-dropdown").addEventListener("change", function () {
            var selectedOption = this.options[this.selectedIndex];
            var sortingValue = selectedOption.value;

            if (sortingValue === "empty") {
                formAction = formAction.replace(/[\?&]sorting=[^&]+/, "");
                if (formAction.includes("Catalog&")) {
                    formAction = formAction.replace("Catalog&", "Catalog?");
                }
            } else {
                if (formAction.indexOf("sorting=") === -1) {
                    formAction += (formAction.includes("?") ? "&" : "?") + "sorting=" + sortingValue;
                } else {
                    formAction = formAction.replace(/sorting=[^&]+/, "sorting=" + sortingValue);
                }
            }

            btnAppliquer.setAttribute("formaction", formAction);
        });

        //Gérer l'URL de retour du bouton de filtres pour les marques
        document.addEventListener('DOMContentLoaded', function () {
            var brandCheckboxes = document.querySelectorAll('.product-index-filter-brand-Checkbox');

            brandCheckboxes.forEach(function (checkbox) {
                checkbox.addEventListener('change', function () {
                    updateUrlWithSelectedBrands();
                });
            });

            function updateUrlWithSelectedBrands() {
                var selectedBrands = [];
                var countCheckBox = 0;

                brandCheckboxes.forEach(function (checkbox) {
                    if (checkbox.checked) {

                        // Ajoutez la marque à la liste des marques sélectionnées
                        selectedBrands.push(checkbox.name.split('[')[1].split(']')[0]);
                        countCheckBox += 1;
                    }
                    else {
                        var selectAllBrandsCheckbox = document.getElementById('product-index-filter-brands-checkall-checkbox-container');
                        selectAllBrandsCheckbox.checked = false;
                    }
                });
                if (brandCheckboxes.length == countCheckBox) {
                    var selectAllBrandsCheckbox = document.getElementById('product-index-filter-brands-checkall-checkbox-container');
                    selectAllBrandsCheckbox.checked = true;
                }

                // Construisez l'URL avec les marques sélectionnées
                var url = window.location.href.split('?')[0]; // URL de base sans les paramètres
                if (selectedBrands.length > 0) {
                    // Utilisez '?brands=' pour le premier paramètre et '&brands=' pour les suivants
                    formAction = url + (url.includes('?') ? '&brands=' : '?brands=') + selectedBrands.join(',');
                } else {
                    formAction = url;  // Pas de marques sélectionnées, utilisez l'URL de base
                }

                console.log(formAction);
                btnAppliquer.setAttribute("formaction", formAction);
            }

        });

        //Price range slider

        document.addEventListener('DOMContentLoaded', function () {
            $("#product-index-filter-price-slider").slider({
                range: true,
                min: 0,
                max: 2000,
                values: [@minValue, @maxValue],
                slide: function (event, ui) {
                    $("#product-index-filter-price-input").val(ui.values[0] + "$ - " + ui.values[1] + "$");
                },
                change: function(event, ui) {

                    // Ajoutez votre logique pour mettre à jour l'URL ou effectuer d'autres actions en fonction du changement de valeur du slider.
                    var formattedValue = ui.values[0] + "$ - " + ui.values[1] + "$";

                    var url = window.location.href.split('?')[0];
                    formAction = url + (url.includes('?') ? '&rangePrice=' : '?rangePrice=') + formattedValue;
                    btnAppliquer.setAttribute("formaction", formAction);
                }
            });

            $("#product-index-filter-price-input").val($("#product-index-filter-price-slider").slider("values", 0) + "$ - " + $("#product-index-filter-price-slider").slider("values", 1) + "$");
        });

        $(document).ready(function () {
            $("#product-index-filter-brands-checkall-checkbox-container").click(function () {
                $(".product-index-filter-brands-checkbox-container :checkbox").attr("checked", $(this).attr("checked"));
            });
        });


        document.addEventListener('DOMContentLoaded', function () {

            var selectAllBrandsCheckbox = document.getElementById('product-index-filter-brands-checkall-checkbox-container');
            var brandCheckboxes = document.querySelectorAll('.product-index-filter-brand-Checkbox');

            selectAllBrandsCheckbox.addEventListener('change', function () {
                var isChecked = selectAllBrandsCheckbox.checked;

                // Mettre à jour l'état de toutes les cases à cocher des marques
                brandCheckboxes.forEach(function (checkbox) {
                    checkbox.checked = isChecked;
                });

                var url = window.location.href.split('?')[0];
                if (selectAllBrandsCheckbox.checked) 
                {
                    formAction = url + (url.includes('?') ? '&selectAllBrands=' : '?selectAllBrands=') + 'True';
                } 
                else
                {
                    formAction = url + (url.includes('?') ? '&selectAllBrands=' : '?selectAllBrands=') + 'False';
                }

                btnAppliquer.setAttribute("formaction", formAction);
            });
        });
    </script>
}