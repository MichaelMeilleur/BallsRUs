@using BallsRUs.Models.Home

@model NousContacterVM

@{
    ViewData["Title"] = "Home";
}

<div id="homepage-carousel-promotion-container">
    <h1 id="homepage-carousel-promotion-title">Des promotions à couper le souffle!</h1>
    <div id="homepage-carousel-promotion-example-controls" class="carousel slide" data-ride="carousel">
        <div class="homepage-carousel-promotion-item">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img class="d-block w-100" src="~/img/slider1.png" alt="First slide">
                </div>
                <div class="carousel-item">
                    <img class="d-block w-100" src="~/img/slider2.png" alt="Second slide">
                </div>
                <div class="carousel-item">
                    <img class="d-block w-100" src="~/img/slider3.png" alt="Third slide">
                </div>
            </div>
        </div>

        <a class="carousel-cont" href="#homepage-carousel-promotion-example-controls" role="button" data-slide="prev">
            <div class="homepage-carousel-promotion-control-prev">
                <span class="carousel-control-prev-icon" aria-hidden="false"></span>
                <span class="sr-only">Previous</span>
            </div>
        </a>
        <a class="carousel-control-next" href="#homepage-carousel-promotion-example-controls" role="button" data-slide="next">
            <div class="homepage-carousel-promotion-control-next">
                <span class="carousel-control-next-icon" aria-hidden="false"></span>
                <span class="sr-only">Next</span>
            </div>

        </a>
    </div>
</div>
<div class="text-center">
    <div id="newsletter-form" class="col-lg-6 col-md-8 col-sm-10">
        <label id="newsletter-header">Nous contacter</label>
        <form asp-action="Submit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="newsletter-form-item form-group my-3 text-start">
                <label asp-for="Name" class="mb-1">Nom</label>
                <input asp-for="Name" type="text" id="newsletter-form-name" placeholder="Votre nom" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="newsletter-form-item form-group my-3 text-start">
                <label asp-for="Email" class="mb-1">Courriel</label>
                <input asp-for="Email" type="text" id="newsletter-form-email" placeholder="nom@exemple.com" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="newsletter-form-item form-group my-3 text-start">
                <label asp-for="Description" class="mb-1">Description</label>
                <textarea asp-for="Description" id="newsletter-form-description" placeholder="Description de la demande"></textarea>
                <span asp-validation-for="Description" class="text-danger" style="width=10px"></span>
            </div>
            <div class="newsletter-form-item form-group mt-4 mb-1 text-start">
                <input type="submit" value="Envoyer" />
            </div>
        </form>
    </div>
</div>
<div class="homepage-partners-title-container">
    <h1>
        Nos partenaires d'exception!
    </h1>
</div>

<div class="homepage-carousel-partners">
    <div class="homepage-carousel-arrowleft">
        <button class="arrow prev"><i class="ri-arrow-left-s-line"></i></button>
    </div>
    <div class="homepage-carousel-arrowright">
        <button class="arrow next"><i class="ri-arrow-right-s-line"></i></button>
    </div>

    <div class="homepage-carousel-cardwrapper">
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_1.png" alt="slide 1">
        </div>
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_2.jpg" alt="slide 2">
        </div>
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_3.jpg" alt="slide 3">
        </div>
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_4.jpg" alt="slide 4">
        </div>
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_5.png" style="background-color:green" alt="slide 5">
        </div>
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_7.jpg" alt="slide 7">
        </div>
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_8.jpg" alt="slide 8">
        </div>
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_9.jpg" alt="slide 9">
        </div>
        <div class="homepage-carousel-card-item-partners">
            <img class="img-fluid mx-auto d-block" src="~/img/indice_c_11.jpg" alt="slide 11">
        </div>
    </div>
</div>

@section Scripts {
    @{
        <script>
            const cardWrapper = document.querySelector('.homepage-carousel-cardwrapper')
            const cardWrapperChildren = Array.from(cardWrapper.children)
            const widthToScroll = cardWrapper.children[0].offsetWidth
            const arrowPrev = document.querySelector('.arrow.prev')
            const arrowNext = document.querySelector('.arrow.next')
            const cardBounding = cardWrapper.getBoundingClientRect()
            const column = Math.floor(cardWrapper.offsetWidth / (widthToScroll + 24))
            let currScroll = 0
            let initPos = 0
            let clicked = false

            console.log(column)

            cardWrapper.classList.add('no-smooth')
            cardWrapper.scrollLeft = cardWrapper.offsetWidth
            cardWrapper.classList.remove('no-smooth')

            cardWrapperChildren.slice(-column).reverse().forEach(item => {
                cardWrapper.insertAdjacentHTML('afterbegin', item.outerHTML)
            })

            cardWrapperChildren.slice(0, column).forEach(item => {
                cardWrapper.insertAdjacentHTML('beforeend', item.outerHTML)
            })

            const cardImageAndLink = cardWrapper.querySelectorAll('img, a')
            cardImageAndLink.forEach(item => {
                item.setAttribute('draggable', false)
            })


            arrowPrev.onclick = function () {
                cardWrapper.scrollLeft -= widthToScroll
            }

            arrowNext.onclick = function () {
                cardWrapper.scrollLeft += widthToScroll
            }

            cardWrapper.onmousedown = function (e) {
                cardWrapper.classList.add('grab')
                initPos = e.clientX - cardBounding.left
                currScroll = cardWrapper.scrollLeft
                clicked = true
            }

            cardWrapper.onmousemove = function (e) {
                if (clicked) {
                    const xPos = e.clientX - cardBounding.left
                    cardWrapper.scrollLeft = currScroll + -(xPos - initPos)
                }
            }

            cardWrapper.onmouseup = mouseUpAndLeave
            cardWrapper.onmouseleave = mouseUpAndLeave

            function mouseUpAndLeave() {
                cardWrapper.classList.remove('grab')
                clicked = false
            }

            let autoScroll

            cardWrapper.onscroll = function () {
                if (cardWrapper.scrollLeft === 0) {
                    // Réinsérez les éléments à la fin lorsque vous atteignez le début
                    const lastChildren = cardWrapperChildren.slice();
                    lastChildren.reverse().forEach(item => {
                        cardWrapper.insertAdjacentHTML('afterbegin', item.outerHTML);
                    });
                    //cardWrapper.scrollLeft = widthToScroll;
                } else if (cardWrapper.scrollLeft >= cardWrapper.scrollWidth - (cardWrapper.offsetWidth + 24)) {
                    // Réinsérez les éléments au début lorsque vous atteignez la fin
                    const firstChildren = cardWrapperChildren.slice();
                    firstChildren.reverse().forEach(item => {
                        cardWrapper.insertAdjacentHTML('beforeend', item.outerHTML);
                    });
                    //cardWrapper.scrollLeft -= widthToScroll
                }

                if (autoScroll) {
                    clearTimeout(autoScroll);
                }

                autoScroll = setTimeout(() => {
                    cardWrapper.classList.remove('no-smooth');
                    cardWrapper.scrollLeft += widthToScroll;
                }, 4000);
            }

        </script>


        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}